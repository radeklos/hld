buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "http://repo.spring.io/milestone"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

group = 'hld'

jar {
    baseName = 'api'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
}

dependencies {
    // core
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-hateoas'
    compile 'org.springframework.integration:spring-integration-mail'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // data
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'postgresql:postgresql:9.0-801.jdbc4'
    compile 'org.modelmapper.extensions:modelmapper-spring:0.7.5'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.3'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.7.0'
    compile 'com.sun.mail:javax.mail'

    compile 'net.rakugakibox.spring.boot:orika-spring-boot-starter:1.4.0'

    // auth
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'io.jsonwebtoken:jjwt:0.7.0'

    // rx
    compile 'io.jmnarloch:rxjava-spring-boot-starter:1.0.0'

    // tests
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('junit:junit')
    testCompile('com.jayway.jsonpath:json-path-assert:0.8.1')
    testCompile('com.github.javafaker:javafaker:0.10')
    testCompile('org.assertj:assertj-core:3.5.2')

    compileOnly "org.projectlombok:lombok:1.16.12"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

task container(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

test {
    testLogging {
        testLogging {
            events "passed", "skipped", "failed", "standardError"
        }
        exceptionFormat = 'full'
    }
}
